{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":0},{"_id":"source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"f48e7adbd3477821d68921dfc8c7de89b48efebe","modified":1498470019000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1498459525000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1498459525000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1498459525000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1498459525000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1498459525000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1498459525000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1498459525000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1498459525000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1498459525000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1498459525000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1498459525000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1498459525000},{"_id":"themes/next/_config.yml","hash":"44c3f39eb41e9f242198b1bcaa857b5d86771d2f","modified":1499960963000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1498459525000},{"_id":"themes/next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1498459525000},{"_id":"themes/next/package.json","hash":"6b5bfec48776ddf9c03811b1ff2cb2b615eccc88","modified":1498459525000},{"_id":"source/_posts/ES5基本规范.md","hash":"d0247a77a7817fe51873c65c43d4d1335156a4fe","modified":1499952117000},{"_id":"source/_posts/ES6新特性简介.md","hash":"a6c2aabd5432ddac13907262ca638e6df6b9052d","modified":1499870426000},{"_id":"source/categories/index.md","hash":"088e5bdb279456c1e595e118ade934101745630f","modified":1499869948000},{"_id":"source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1499961338000},{"_id":"source/tags/index.md","hash":"20bcedbaa41cfdff5b033180c5af09bc344646a2","modified":1499788771000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1498459525000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1498459525000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1498459513000},{"_id":"themes/next/.git/index","hash":"286d1c00bf1d3e0e117d0b2f57cb0cac915b60ad","modified":1498459525000},{"_id":"themes/next/.git/packed-refs","hash":"458c1cd159bff8b80cb42d8eaca86fb4686a0982","modified":1498459525000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1498459525000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"fdd63b77472612337309eb93ec415a059b90756b","modified":1498459525000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1498459525000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1498459525000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1498459525000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1498459525000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1498459525000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1498459525000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1498459525000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1498459525000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1498459525000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1498459525000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1498459525000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1498459525000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1498459525000},{"_id":"themes/next/layout/_layout.swig","hash":"a44305f8fa7fe9c80eb50c0696a704424b589750","modified":1498459525000},{"_id":"themes/next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1498459525000},{"_id":"themes/next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1498459525000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1498459525000},{"_id":"themes/next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1498459525000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1498459525000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1498459525000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1498459525000},{"_id":"themes/next/layout/page.swig","hash":"baa667bc801349d5c4984c0f172973d3780400df","modified":1498459525000},{"_id":"themes/next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1498459525000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1498459525000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1498459525000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1498459525000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498459525000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1498459513000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1498459513000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1498459513000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1498459513000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1498459513000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1498459513000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1498459513000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1498459513000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1498459513000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1498459513000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1498459513000},{"_id":"themes/next/.git/logs/HEAD","hash":"8964df69ad1351e2211e7b7b2cac2e7aa635b7a7","modified":1498459525000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1498459525000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1498459525000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1498459525000},{"_id":"themes/next/layout/_macro/post.swig","hash":"9481f43ed356e00df7b519e92ad0becebc9e1505","modified":1498459525000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1498459525000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"1c7d3c975e499b9aa3119d6724b030b7b00fc87e","modified":1498459525000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a2b213c1a7c37cd6e4749f2018371f4c1f4f0d23","modified":1498459525000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1498459525000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1498459525000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1498459525000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1498459525000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6a7eb93d8aa7d4baa472890bd666b921f449d8af","modified":1498459525000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1498459525000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1498459525000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1498459525000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1498459525000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1498459525000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1498459525000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1498459525000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1498459525000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1498459525000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1498459525000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1498459525000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1498459525000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1498459525000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1498459525000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1498459525000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1498459525000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1498459525000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1498459525000},{"_id":"themes/next/scripts/tags/note.js","hash":"21b102db8a01c7b15ae2c0ea3ef3d4cf807ec6ed","modified":1498459525000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1498459525000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1498459525000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1498459525000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1498459525000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1498459525000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1498459525000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1498459525000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1498459525000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1498459525000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1498459525000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1498459525000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1498459525000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1498459525000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1498459525000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1498459525000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498459525000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498459525000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498459525000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498459525000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498459525000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498459525000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498459525000},{"_id":"themes/next/.git/refs/heads/master","hash":"6aa1413002cbbd42cb24949b4a0d415f03c0137b","modified":1498459525000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1498459525000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1498459525000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1498459525000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1498459525000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1498459525000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1498459525000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1498459525000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1498459525000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1498459525000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1498459525000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1498459525000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1498459525000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1498459525000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1498459525000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1498459525000},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1498459525000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1498459525000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1498459525000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1498459525000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"1d0d01aaeb7bcde3671263d736718f8837c20182","modified":1498459525000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1498459525000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1498459525000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1498459525000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1498459525000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1498459525000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1498459525000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1498459525000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1498459525000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1498459525000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1498459525000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1498459525000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1498459525000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1498459525000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1498459525000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1498459525000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1498459525000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1498459525000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1498459525000},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1498459525000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1498459525000},{"_id":"themes/next/source/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1498459525000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1498459525000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1498459525000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1498459525000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1498459525000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1498459525000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1498459525000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1498459525000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1498459525000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1498459525000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1498459525000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1498459525000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1498459525000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1498459525000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1498459525000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1498459525000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1498459525000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1498459525000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1498459525000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1498459525000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1498459525000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1498459525000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1498459525000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1498459525000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1498459525000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1498459525000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"8964df69ad1351e2211e7b7b2cac2e7aa635b7a7","modified":1498459525000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1498459525000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1498459525000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1498459525000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1498459525000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1498459525000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1498459525000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1498459525000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1498459525000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1498459525000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1498459525000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1498459525000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1498459525000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1498459525000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1498459525000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1498459525000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1498459525000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1498459525000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1498459525000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"8964df69ad1351e2211e7b7b2cac2e7aa635b7a7","modified":1498459525000},{"_id":"themes/next/.git/objects/pack/pack-9a1844321d468000d7863ad64c172ee175676d7c.idx","hash":"b7595d42207ccb47747af3ae62a246b38049b5c9","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"468bc734f47209096588ef1a8e55e60a3b12aa63","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"dfc86d37f5b580977d82af6ef835082d09a0c499","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1498459525000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"bb3be8374c31c372ed0995bd8030d2b920d581de","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1498459525000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1498459525000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1498459525000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1498459525000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1498459525000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1498459525000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1498459525000},{"_id":"source/images/avatar.png","hash":"4ec7dca4400281f6679f2fb591b31b5a98301057","modified":1498470066000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1498459525000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1498459525000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1498459525000},{"_id":"themes/next/.git/objects/pack/pack-9a1844321d468000d7863ad64c172ee175676d7c.pack","hash":"19c3bff85d99c8a60c420526100d81790195af08","modified":1498459525000},{"_id":"public/categories/index.html","hash":"7f30872062b50c040e6b68ca564665110082c771","modified":1499958944909},{"_id":"public/tags/index.html","hash":"f4fc12268405990d3d6a9f018d09a07b378e5c5a","modified":1499958944910},{"_id":"public/archives/index.html","hash":"1de168b13339730686994129f57124051baa1556","modified":1499958944910},{"_id":"public/archives/2017/index.html","hash":"dce665e33f24a9a7f9beb5ae6e74dd4490ebb711","modified":1499958944910},{"_id":"public/archives/2017/07/index.html","hash":"5387613ac8942416e974fc4cf1f30fa47e1d5396","modified":1499958944910},{"_id":"public/tags/前端/index.html","hash":"ef1f43ea2f92501c682731047d8b3f6399da9cd8","modified":1499958944910},{"_id":"public/tags/js/index.html","hash":"eeab6fc325fec308529bfdd345de6eed38d3b4f6","modified":1499958944910},{"_id":"public/tags/ES6/index.html","hash":"5b5f1d290138fcb9c4bd66ce7364142ccc76c091","modified":1499958944911},{"_id":"public/categories/前端-js-ES6/index.html","hash":"79c75ae8b98371d50634fd231542ab95eed60d9d","modified":1499958944911},{"_id":"public/2017/07/11/ES6新特性简介/index.html","hash":"32b51b718bcdfdc6f8ed22735dabb53604b975f3","modified":1499961281427},{"_id":"public/index.html","hash":"eb5df7cefdfd4ad193f3c60fc1039497c1b0c295","modified":1499958944911},{"_id":"public/tags/规范/index.html","hash":"a97d19319b0600343459ca1519153028100eb6e2","modified":1499958944911},{"_id":"public/tags/ES5/index.html","hash":"3c687cc886ce8c1571d44a3d4c64ec1d63c10aeb","modified":1499958944911},{"_id":"public/categories/前端-js-规范/index.html","hash":"744ce6e553faf1235081156fcdef998d082833e9","modified":1499958944911},{"_id":"public/2017/07/12/ES5基本规范/index.html","hash":"417611180019704b4e62c41babd15d36cae573d2","modified":1499961281427},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1499870635625},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1499870635625},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1499870635626},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1499870635626},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1499870635627},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1499870635627},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1499870635627},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1499870635627},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1499870635627},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1499870635627},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1499870635627},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1499870635627},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1499870635627},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1499870635627},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1499870635627},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1499870635627},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1499870635627},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1499870635627},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1499870635628},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1499870635628},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1499870635628},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1499870635628},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1499870635628},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1499870635628},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1499870635628},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1499870635628},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1499870635628},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1499870635628},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1499870636502},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1499870636514},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1499870636529},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1499870636529},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1499870636530},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1499870636530},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1499870636530},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1499870636530},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1499870636530},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1499870636530},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1499870636530},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1499870636530},{"_id":"public/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1499870636530},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1499870636530},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1499870636530},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1499870636530},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1499870636530},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1499870636530},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1499870636530},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1499870636530},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1499870636530},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1499870636530},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1499870636530},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1499870636530},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1499870636531},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1499870636531},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1499870636531},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1499870636531},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1499870636531},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1499870636531},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1499870636531},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1499870636531},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1499870636531},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1499870636531},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1499870636531},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1499870636531},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1499870636531},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1499870636531},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1499870636531},{"_id":"public/css/main.css","hash":"23c9c06fafbc0881289c2afcd1f317e572fac2ca","modified":1499870636531},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1499870636531},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1499870636531},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1499870636531},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1499870636531},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1499870636531},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1499870636531},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1499870636531},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1499870636531},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1499870636531},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1499870636531},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1499870636531},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1499870636531},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1499870636531},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1499870636531},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1499870636531},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1499870636532},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1499870636532},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1499870636532},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1499870636532},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1499870636532},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1499870636532},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1499870636542},{"_id":"public/images/avatar.png","hash":"4ec7dca4400281f6679f2fb591b31b5a98301057","modified":1499870636553},{"_id":"source/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1499959149000},{"_id":"source/images/wechat.jpg","hash":"613bde2f941feed89bb75a37390e27c7e395275a","modified":1499960257000},{"_id":"source/images/alipay.png","hash":"bb44699d5e01bc7b7fc6d427f6d586654e8b2995","modified":1499960930000},{"_id":"source/images/wechat.png","hash":"acc010a314980e588f528d44a90339973d98b887","modified":1499961191000},{"_id":"public/404.html","hash":"a1b2c74265acbded0efcbbd91ed378fc54973bca","modified":1499961281429},{"_id":"public/images/wechat.jpg","hash":"613bde2f941feed89bb75a37390e27c7e395275a","modified":1499961281430},{"_id":"public/images/alipay.png","hash":"bb44699d5e01bc7b7fc6d427f6d586654e8b2995","modified":1499961281432},{"_id":"public/images/wechat.png","hash":"acc010a314980e588f528d44a90339973d98b887","modified":1499961281433}],"Category":[{"name":"前端-js-规范","_id":"cj5148zvp0004yzw87rdmsifz"},{"name":"前端-js-ES6","_id":"cj5148zvv0006yzw81n6ghzn6"}],"Data":[],"Page":[{"title":"categories","date":"2017-07-12T14:31:58.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-07-12 22:31:58\ntype: \"categories\"\n---\n","updated":"2017-07-12T14:32:28.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj5148zvh0001yzw8yafhwjm0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-07-11T15:58:31.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-07-11 23:58:31\ntype: \"tags\"\n---\n","updated":"2017-07-11T15:59:31.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj5148zvn0003yzw8vu07554a","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","date":"2017-07-13T15:19:09.000Z","updated":"2017-07-13T15:19:09.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cj52m7uf30000dbw8gy351e61","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}],"Post":[{"title":"ES5基本规范","date":"2017-07-12T14:40:00.000Z","_content":"\n> 参考：[编写可维护的JavaScript](https://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/B00BQ7RMW0/ref=sr_1_1?s=books&ie=UTF8&qid=1499870567&sr=1-1&keywords=%E7%BC%96%E5%86%99%E5%8F%AF%E7%BB%B4%E6%8A%A4%E7%9A%84javascript)\n\n### 基本规范\n\n- 使用递归方式，一定要有结束条件，如果结束条件不确定，要有调用次数\n- 每一层级4个空格缩进，禁止使用制表符缩进（可以设置webstorm tab键为四个空格）\n```\nif (someCondition) {\n    doSomething();\n}\n```\n- 每行的长度尽量不超过120个字符（webstorm代码编辑页面中间有一条线，以那条线为准），如果超过应当在一个运算符（逗号、加号、逻辑运算符等）后换行，下一行应当相对增加一级缩进（4个空格）（还是两级？8个空格？）\n```\n一级缩进：\n\ndoSomething(argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10,\n    argument11)\n    \n两级缩进：\n\ndoSomething(argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10,\n        argument11)\n```\n- 初始化变量时字符串应当始终使用双引号，避免使用单引号，避免使用undefined，可以使用null\n- 函数内用var声明变量时一定要在函数开始的地方，避免在if、for等语句块内声明，因为JavaScript的变量声明会提前。最好在函数的第一句使用一个var声明变量，一个变量一行，添加相应缩进并添加相应注释。\n```\nfunction doSomething(items) {\n    var i,  // for循环变量\n        length,\n        value = 10,\n        result = value + 10;\n    \n    for (i = 0, length = items.length; i < length; i++) {\n        xxx;\n    }\n}\n```\n- 语句末尾一定加分号\n- 给变量赋值时如果右侧是含有比较语句的表达式，需要用圆括号包裹\n```\nvar flag = (i < count);\n```\n- 使用===、!== ，避免使用==和!=\n- if语句可以进行相应的简化（特殊情况特殊处理）\n```\nif (count === 10) {\n    success = true;\n} else {\n    success = false;\n}\n```\n可以简化为:\n```\nsuccess = (count === 10);\n```\n```\nif (hasClick === true) {\n    ...\n}\nif (hasClick === false) {\n    ...\n} \n```\n可以简化为\n```\nif (hasClick) {\n    ...\n}\nif (!hasClick) {\n    ...\n}\n```\n\n### 间距\n\n- 运算符间距。二元运算符前后使用一个空格，包括赋值运算符、逻辑运算符等。\n```\nvar found = (values[i] === item);\n\nif (found && (count > 10)) {\n    doSomething();\n}\n\nfor (i = 0; i < count; i++) {\n    process(i);\n}\n```\n- 括号间距。紧接左括号之后和紧接右括号之前不应该有空格\n- 对象内间距:\n    - 每个属性名后紧跟冒号，不加空格，冒号后加一个空格然后写属性值\n    - 对象内要有恰当的缩进\n    - 一组相关的属性前后插入一个空行（不要多）\n- 空行。在上下逻辑不相关的地方插入一个空行（有且只有一个空行，不要多）\n\n### 命名\n\n- 驼峰式命名，首字母小写，后面单词首字符大写\n- 变量名一定要有含义，避免a, b, c, x, y这样的命名，for循环中的i, j, k等变量除外，但是要写好注释\n\n#### 常量命名\n- 全大写字母加下划线，下划线用来分隔单词\n\n#### 变量命名\n- 变量名的第一个单词应当是名词（而非动词）\n- 不要在变量命名中使用下划线\n\n#### 函数命名\n- 函数名的第一个单词应当是动词（而非名词）\n- 不要再函数命名中使用下划线\n\n### 注释\n\n> 不要写无意义的注释\n\n#### 变量/表达式注释\n- 在变量上方或后面用//进行单行注释，//后应当加一个空格\n- 如果在上方使用独立行注释，应当有适当的缩进，并且注释的上方应当有一个空行\n- 如果在后面进行注释，//前应有两个空格的缩进\n\n#### 方法注释(webstorm在写好的方法上方输入/**然后回车)\n- 说明方法的作用或意义或内容\n- 说明每个参数的类型（类型不确定可以进行相应说明）及含义\n- 如果有返回值说明返回内容\n```    \n/**\n * 把源对象的属性扩展到目标对象\n * @param {Any} target 参数\n * @param {Any*} source 源对象。若有同名属性，则后者覆盖前者\n * @return {Any} 目标对象\n */\nfunction extend(target, source) {\n    return xxx;\n}\n```\n\n#### 注释声明\n- TODO 说明代码还未完成，应当包含下一步要做的事情\n- HACK 说明代码实现走了一个捷径，应当包含为何使用hack，也表明该问题可能会有更好的解决办法\n- XXX  说明代码是有问题的并应尽快修复\n- REVIEW 说明代码任何可能的修改都需要评审\n\n> 这些声明可以在单行注释或者多行注释中使用\n\n示例:\n\n```\n// TODO: 我希望有更好的方式\ndoSOmething();\n\n/*\n * HACK: 不得不针对IE做特殊处理，我计划后续有时间重写这部分，\n * 这些代码可能需要在1.0.60版本之前替换掉。\n */\nif (document.all) {\n    doSomething();\n}\n\n// REVIEW: 有更好的方法吗？\nif (document.all) {\n    doSomething();\n}\n```\n\n### js、css、html代码分离\n\n- 避免在html写css样式\n- 尽量避免js中处理DOM，如果必要则必须写清楚注释并且把DOM操作部分独立出来，和逻辑处理分开\n\n### 事件处理\n\n- 应用逻辑和事件处理程序独立\n- 事件处理程序进入应用逻辑之前可以对event进行必要的操作，比如阻止默认事件(event.preventDefault)或者冒泡事件(event.stopPropagation)等\n\n### 比较\n\n- 不要用null来比较判断是否空值\n```\n错误代码：\nif (something === null) {\n    xxx\n}\n```\n- 使用typeof来判断基本类型\n```\n用法： typeof 变量\n各个类型变量返回值:\n字符串： \"string\"\n数字： \"number\"\n布尔值： \"boolean\"\nnull：  null(不是字符串)\nundefined： \"undefined\"\n```\n- 用instanceof检查引用值（日期Date，错误Error等）\n```\n用法： value instanceof constructor\n\n// 检测日期\nif (value instanceof Date) {\n    console.log(value.getFullYear());\n}\n\n// 检测正则表达式\nif (value instanceof RegExp) {\n    console.log(value);\n}\n```\n> 不要用instanceof检测Object，因为所有引用值都是继承Object\n\n- 用Array.isArray(value)检测数组\n```\nArray.isArray([1, 2, 3])\n```\n- 使用in检测对象属性是否存在\n```\nvar object = {\n    count: 0,\n    related: null\n}\n\nif (\"count\" in object) {\n    xxx\n}\n```\n\n### js逻辑相关\n\n- 逻辑运算优化! [https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0](https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0)\n- 避免看起来很混乱的逻辑判断，如果实在需要复杂的逻辑，一定写清楚注释\n\n","source":"_posts/ES5基本规范.md","raw":"---\ntitle: ES5基本规范\ndate: 2017-07-12 22:40:00\ncategories:\n- 前端-js-规范\ntags:\n- 前端\n- js\n- 规范\n- ES5\n---\n\n> 参考：[编写可维护的JavaScript](https://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/B00BQ7RMW0/ref=sr_1_1?s=books&ie=UTF8&qid=1499870567&sr=1-1&keywords=%E7%BC%96%E5%86%99%E5%8F%AF%E7%BB%B4%E6%8A%A4%E7%9A%84javascript)\n\n### 基本规范\n\n- 使用递归方式，一定要有结束条件，如果结束条件不确定，要有调用次数\n- 每一层级4个空格缩进，禁止使用制表符缩进（可以设置webstorm tab键为四个空格）\n```\nif (someCondition) {\n    doSomething();\n}\n```\n- 每行的长度尽量不超过120个字符（webstorm代码编辑页面中间有一条线，以那条线为准），如果超过应当在一个运算符（逗号、加号、逻辑运算符等）后换行，下一行应当相对增加一级缩进（4个空格）（还是两级？8个空格？）\n```\n一级缩进：\n\ndoSomething(argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10,\n    argument11)\n    \n两级缩进：\n\ndoSomething(argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10,\n        argument11)\n```\n- 初始化变量时字符串应当始终使用双引号，避免使用单引号，避免使用undefined，可以使用null\n- 函数内用var声明变量时一定要在函数开始的地方，避免在if、for等语句块内声明，因为JavaScript的变量声明会提前。最好在函数的第一句使用一个var声明变量，一个变量一行，添加相应缩进并添加相应注释。\n```\nfunction doSomething(items) {\n    var i,  // for循环变量\n        length,\n        value = 10,\n        result = value + 10;\n    \n    for (i = 0, length = items.length; i < length; i++) {\n        xxx;\n    }\n}\n```\n- 语句末尾一定加分号\n- 给变量赋值时如果右侧是含有比较语句的表达式，需要用圆括号包裹\n```\nvar flag = (i < count);\n```\n- 使用===、!== ，避免使用==和!=\n- if语句可以进行相应的简化（特殊情况特殊处理）\n```\nif (count === 10) {\n    success = true;\n} else {\n    success = false;\n}\n```\n可以简化为:\n```\nsuccess = (count === 10);\n```\n```\nif (hasClick === true) {\n    ...\n}\nif (hasClick === false) {\n    ...\n} \n```\n可以简化为\n```\nif (hasClick) {\n    ...\n}\nif (!hasClick) {\n    ...\n}\n```\n\n### 间距\n\n- 运算符间距。二元运算符前后使用一个空格，包括赋值运算符、逻辑运算符等。\n```\nvar found = (values[i] === item);\n\nif (found && (count > 10)) {\n    doSomething();\n}\n\nfor (i = 0; i < count; i++) {\n    process(i);\n}\n```\n- 括号间距。紧接左括号之后和紧接右括号之前不应该有空格\n- 对象内间距:\n    - 每个属性名后紧跟冒号，不加空格，冒号后加一个空格然后写属性值\n    - 对象内要有恰当的缩进\n    - 一组相关的属性前后插入一个空行（不要多）\n- 空行。在上下逻辑不相关的地方插入一个空行（有且只有一个空行，不要多）\n\n### 命名\n\n- 驼峰式命名，首字母小写，后面单词首字符大写\n- 变量名一定要有含义，避免a, b, c, x, y这样的命名，for循环中的i, j, k等变量除外，但是要写好注释\n\n#### 常量命名\n- 全大写字母加下划线，下划线用来分隔单词\n\n#### 变量命名\n- 变量名的第一个单词应当是名词（而非动词）\n- 不要在变量命名中使用下划线\n\n#### 函数命名\n- 函数名的第一个单词应当是动词（而非名词）\n- 不要再函数命名中使用下划线\n\n### 注释\n\n> 不要写无意义的注释\n\n#### 变量/表达式注释\n- 在变量上方或后面用//进行单行注释，//后应当加一个空格\n- 如果在上方使用独立行注释，应当有适当的缩进，并且注释的上方应当有一个空行\n- 如果在后面进行注释，//前应有两个空格的缩进\n\n#### 方法注释(webstorm在写好的方法上方输入/**然后回车)\n- 说明方法的作用或意义或内容\n- 说明每个参数的类型（类型不确定可以进行相应说明）及含义\n- 如果有返回值说明返回内容\n```    \n/**\n * 把源对象的属性扩展到目标对象\n * @param {Any} target 参数\n * @param {Any*} source 源对象。若有同名属性，则后者覆盖前者\n * @return {Any} 目标对象\n */\nfunction extend(target, source) {\n    return xxx;\n}\n```\n\n#### 注释声明\n- TODO 说明代码还未完成，应当包含下一步要做的事情\n- HACK 说明代码实现走了一个捷径，应当包含为何使用hack，也表明该问题可能会有更好的解决办法\n- XXX  说明代码是有问题的并应尽快修复\n- REVIEW 说明代码任何可能的修改都需要评审\n\n> 这些声明可以在单行注释或者多行注释中使用\n\n示例:\n\n```\n// TODO: 我希望有更好的方式\ndoSOmething();\n\n/*\n * HACK: 不得不针对IE做特殊处理，我计划后续有时间重写这部分，\n * 这些代码可能需要在1.0.60版本之前替换掉。\n */\nif (document.all) {\n    doSomething();\n}\n\n// REVIEW: 有更好的方法吗？\nif (document.all) {\n    doSomething();\n}\n```\n\n### js、css、html代码分离\n\n- 避免在html写css样式\n- 尽量避免js中处理DOM，如果必要则必须写清楚注释并且把DOM操作部分独立出来，和逻辑处理分开\n\n### 事件处理\n\n- 应用逻辑和事件处理程序独立\n- 事件处理程序进入应用逻辑之前可以对event进行必要的操作，比如阻止默认事件(event.preventDefault)或者冒泡事件(event.stopPropagation)等\n\n### 比较\n\n- 不要用null来比较判断是否空值\n```\n错误代码：\nif (something === null) {\n    xxx\n}\n```\n- 使用typeof来判断基本类型\n```\n用法： typeof 变量\n各个类型变量返回值:\n字符串： \"string\"\n数字： \"number\"\n布尔值： \"boolean\"\nnull：  null(不是字符串)\nundefined： \"undefined\"\n```\n- 用instanceof检查引用值（日期Date，错误Error等）\n```\n用法： value instanceof constructor\n\n// 检测日期\nif (value instanceof Date) {\n    console.log(value.getFullYear());\n}\n\n// 检测正则表达式\nif (value instanceof RegExp) {\n    console.log(value);\n}\n```\n> 不要用instanceof检测Object，因为所有引用值都是继承Object\n\n- 用Array.isArray(value)检测数组\n```\nArray.isArray([1, 2, 3])\n```\n- 使用in检测对象属性是否存在\n```\nvar object = {\n    count: 0,\n    related: null\n}\n\nif (\"count\" in object) {\n    xxx\n}\n```\n\n### js逻辑相关\n\n- 逻辑运算优化! [https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0](https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0)\n- 避免看起来很混乱的逻辑判断，如果实在需要复杂的逻辑，一定写清楚注释\n\n","slug":"ES5基本规范","published":1,"updated":"2017-07-13T13:21:57.000Z","_id":"cj5148zvc0000yzw8cylvug8g","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>参考：<a href=\"https://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/B00BQ7RMW0/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1499870567&amp;sr=1-1&amp;keywords=%E7%BC%96%E5%86%99%E5%8F%AF%E7%BB%B4%E6%8A%A4%E7%9A%84javascript\" target=\"_blank\" rel=\"external\">编写可维护的JavaScript</a></p>\n</blockquote>\n<h3 id=\"基本规范\"><a href=\"#基本规范\" class=\"headerlink\" title=\"基本规范\"></a>基本规范</h3><ul>\n<li>使用递归方式，一定要有结束条件，如果结束条件不确定，要有调用次数</li>\n<li><p>每一层级4个空格缩进，禁止使用制表符缩进（可以设置webstorm tab键为四个空格）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (someCondition) &#123;</div><div class=\"line\">    doSomething();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>每行的长度尽量不超过120个字符（webstorm代码编辑页面中间有一条线，以那条线为准），如果超过应当在一个运算符（逗号、加号、逻辑运算符等）后换行，下一行应当相对增加一级缩进（4个空格）（还是两级？8个空格？）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">一级缩进：</div><div class=\"line\"></div><div class=\"line\">doSomething(argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10,</div><div class=\"line\">    argument11)</div><div class=\"line\">    </div><div class=\"line\">两级缩进：</div><div class=\"line\"></div><div class=\"line\">doSomething(argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10,</div><div class=\"line\">        argument11)</div></pre></td></tr></table></figure>\n</li>\n<li><p>初始化变量时字符串应当始终使用双引号，避免使用单引号，避免使用undefined，可以使用null</p>\n</li>\n<li><p>函数内用var声明变量时一定要在函数开始的地方，避免在if、for等语句块内声明，因为JavaScript的变量声明会提前。最好在函数的第一句使用一个var声明变量，一个变量一行，添加相应缩进并添加相应注释。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function doSomething(items) &#123;</div><div class=\"line\">    var i,  // for循环变量</div><div class=\"line\">        length,</div><div class=\"line\">        value = 10,</div><div class=\"line\">        result = value + 10;</div><div class=\"line\">    </div><div class=\"line\">    for (i = 0, length = items.length; i &lt; length; i++) &#123;</div><div class=\"line\">        xxx;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>语句末尾一定加分号</p>\n</li>\n<li><p>给变量赋值时如果右侧是含有比较语句的表达式，需要用圆括号包裹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var flag = (i &lt; count);</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用===、!== ，避免使用==和!=</p>\n</li>\n<li>if语句可以进行相应的简化（特殊情况特殊处理）<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (count === 10) &#123;</div><div class=\"line\">    success = true;</div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">    success = false;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以简化为:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">success = (count === 10);</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (hasClick === true) &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\">if (hasClick === false) &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以简化为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (hasClick) &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\">if (!hasClick) &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"间距\"><a href=\"#间距\" class=\"headerlink\" title=\"间距\"></a>间距</h3><ul>\n<li><p>运算符间距。二元运算符前后使用一个空格，包括赋值运算符、逻辑运算符等。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var found = (values[i] === item);</div><div class=\"line\"></div><div class=\"line\">if (found &amp;&amp; (count &gt; 10)) &#123;</div><div class=\"line\">    doSomething();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">for (i = 0; i &lt; count; i++) &#123;</div><div class=\"line\">    process(i);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>括号间距。紧接左括号之后和紧接右括号之前不应该有空格</p>\n</li>\n<li>对象内间距:<ul>\n<li>每个属性名后紧跟冒号，不加空格，冒号后加一个空格然后写属性值</li>\n<li>对象内要有恰当的缩进</li>\n<li>一组相关的属性前后插入一个空行（不要多）</li>\n</ul>\n</li>\n<li>空行。在上下逻辑不相关的地方插入一个空行（有且只有一个空行，不要多）</li>\n</ul>\n<h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><ul>\n<li>驼峰式命名，首字母小写，后面单词首字符大写</li>\n<li>变量名一定要有含义，避免a, b, c, x, y这样的命名，for循环中的i, j, k等变量除外，但是要写好注释</li>\n</ul>\n<h4 id=\"常量命名\"><a href=\"#常量命名\" class=\"headerlink\" title=\"常量命名\"></a>常量命名</h4><ul>\n<li>全大写字母加下划线，下划线用来分隔单词</li>\n</ul>\n<h4 id=\"变量命名\"><a href=\"#变量命名\" class=\"headerlink\" title=\"变量命名\"></a>变量命名</h4><ul>\n<li>变量名的第一个单词应当是名词（而非动词）</li>\n<li>不要在变量命名中使用下划线</li>\n</ul>\n<h4 id=\"函数命名\"><a href=\"#函数命名\" class=\"headerlink\" title=\"函数命名\"></a>函数命名</h4><ul>\n<li>函数名的第一个单词应当是动词（而非名词）</li>\n<li>不要再函数命名中使用下划线</li>\n</ul>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><blockquote>\n<p>不要写无意义的注释</p>\n</blockquote>\n<h4 id=\"变量-表达式注释\"><a href=\"#变量-表达式注释\" class=\"headerlink\" title=\"变量/表达式注释\"></a>变量/表达式注释</h4><ul>\n<li>在变量上方或后面用//进行单行注释，//后应当加一个空格</li>\n<li>如果在上方使用独立行注释，应当有适当的缩进，并且注释的上方应当有一个空行</li>\n<li>如果在后面进行注释，//前应有两个空格的缩进</li>\n</ul>\n<h4 id=\"方法注释-webstorm在写好的方法上方输入-然后回车\"><a href=\"#方法注释-webstorm在写好的方法上方输入-然后回车\" class=\"headerlink\" title=\"方法注释(webstorm在写好的方法上方输入/**然后回车)\"></a>方法注释(webstorm在写好的方法上方输入/**然后回车)</h4><ul>\n<li>说明方法的作用或意义或内容</li>\n<li>说明每个参数的类型（类型不确定可以进行相应说明）及含义</li>\n<li>如果有返回值说明返回内容<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * 把源对象的属性扩展到目标对象</div><div class=\"line\"> * @param &#123;Any&#125; target 参数</div><div class=\"line\"> * @param &#123;Any*&#125; source 源对象。若有同名属性，则后者覆盖前者</div><div class=\"line\"> * @return &#123;Any&#125; 目标对象</div><div class=\"line\"> */</div><div class=\"line\">function extend(target, source) &#123;</div><div class=\"line\">    return xxx;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"注释声明\"><a href=\"#注释声明\" class=\"headerlink\" title=\"注释声明\"></a>注释声明</h4><ul>\n<li>TODO 说明代码还未完成，应当包含下一步要做的事情</li>\n<li>HACK 说明代码实现走了一个捷径，应当包含为何使用hack，也表明该问题可能会有更好的解决办法</li>\n<li>XXX  说明代码是有问题的并应尽快修复</li>\n<li>REVIEW 说明代码任何可能的修改都需要评审</li>\n</ul>\n<blockquote>\n<p>这些声明可以在单行注释或者多行注释中使用</p>\n</blockquote>\n<p>示例:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">// TODO: 我希望有更好的方式</div><div class=\"line\">doSOmething();</div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\"> * HACK: 不得不针对IE做特殊处理，我计划后续有时间重写这部分，</div><div class=\"line\"> * 这些代码可能需要在1.0.60版本之前替换掉。</div><div class=\"line\"> */</div><div class=\"line\">if (document.all) &#123;</div><div class=\"line\">    doSomething();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// REVIEW: 有更好的方法吗？</div><div class=\"line\">if (document.all) &#123;</div><div class=\"line\">    doSomething();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"js、css、html代码分离\"><a href=\"#js、css、html代码分离\" class=\"headerlink\" title=\"js、css、html代码分离\"></a>js、css、html代码分离</h3><ul>\n<li>避免在html写css样式</li>\n<li>尽量避免js中处理DOM，如果必要则必须写清楚注释并且把DOM操作部分独立出来，和逻辑处理分开</li>\n</ul>\n<h3 id=\"事件处理\"><a href=\"#事件处理\" class=\"headerlink\" title=\"事件处理\"></a>事件处理</h3><ul>\n<li>应用逻辑和事件处理程序独立</li>\n<li>事件处理程序进入应用逻辑之前可以对event进行必要的操作，比如阻止默认事件(event.preventDefault)或者冒泡事件(event.stopPropagation)等</li>\n</ul>\n<h3 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h3><ul>\n<li><p>不要用null来比较判断是否空值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">错误代码：</div><div class=\"line\">if (something === null) &#123;</div><div class=\"line\">    xxx</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用typeof来判断基本类型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">用法： typeof 变量</div><div class=\"line\">各个类型变量返回值:</div><div class=\"line\">字符串： &quot;string&quot;</div><div class=\"line\">数字： &quot;number&quot;</div><div class=\"line\">布尔值： &quot;boolean&quot;</div><div class=\"line\">null：  null(不是字符串)</div><div class=\"line\">undefined： &quot;undefined&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>用instanceof检查引用值（日期Date，错误Error等）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">用法： value instanceof constructor</div><div class=\"line\"></div><div class=\"line\">// 检测日期</div><div class=\"line\">if (value instanceof Date) &#123;</div><div class=\"line\">    console.log(value.getFullYear());</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 检测正则表达式</div><div class=\"line\">if (value instanceof RegExp) &#123;</div><div class=\"line\">    console.log(value);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>不要用instanceof检测Object，因为所有引用值都是继承Object</p>\n</blockquote>\n<ul>\n<li><p>用Array.isArray(value)检测数组</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array.isArray([1, 2, 3])</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用in检测对象属性是否存在</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var object = &#123;</div><div class=\"line\">    count: 0,</div><div class=\"line\">    related: null</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">if (&quot;count&quot; in object) &#123;</div><div class=\"line\">    xxx</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"js逻辑相关\"><a href=\"#js逻辑相关\" class=\"headerlink\" title=\"js逻辑相关\"></a>js逻辑相关</h3><ul>\n<li>逻辑运算优化! <a href=\"https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0\" target=\"_blank\" rel=\"external\">https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0</a></li>\n<li>避免看起来很混乱的逻辑判断，如果实在需要复杂的逻辑，一定写清楚注释</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>参考：<a href=\"https://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/B00BQ7RMW0/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1499870567&amp;sr=1-1&amp;keywords=%E7%BC%96%E5%86%99%E5%8F%AF%E7%BB%B4%E6%8A%A4%E7%9A%84javascript\" target=\"_blank\" rel=\"external\">编写可维护的JavaScript</a></p>\n</blockquote>\n<h3 id=\"基本规范\"><a href=\"#基本规范\" class=\"headerlink\" title=\"基本规范\"></a>基本规范</h3><ul>\n<li>使用递归方式，一定要有结束条件，如果结束条件不确定，要有调用次数</li>\n<li><p>每一层级4个空格缩进，禁止使用制表符缩进（可以设置webstorm tab键为四个空格）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (someCondition) &#123;</div><div class=\"line\">    doSomething();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>每行的长度尽量不超过120个字符（webstorm代码编辑页面中间有一条线，以那条线为准），如果超过应当在一个运算符（逗号、加号、逻辑运算符等）后换行，下一行应当相对增加一级缩进（4个空格）（还是两级？8个空格？）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">一级缩进：</div><div class=\"line\"></div><div class=\"line\">doSomething(argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10,</div><div class=\"line\">    argument11)</div><div class=\"line\">    </div><div class=\"line\">两级缩进：</div><div class=\"line\"></div><div class=\"line\">doSomething(argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10,</div><div class=\"line\">        argument11)</div></pre></td></tr></table></figure>\n</li>\n<li><p>初始化变量时字符串应当始终使用双引号，避免使用单引号，避免使用undefined，可以使用null</p>\n</li>\n<li><p>函数内用var声明变量时一定要在函数开始的地方，避免在if、for等语句块内声明，因为JavaScript的变量声明会提前。最好在函数的第一句使用一个var声明变量，一个变量一行，添加相应缩进并添加相应注释。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function doSomething(items) &#123;</div><div class=\"line\">    var i,  // for循环变量</div><div class=\"line\">        length,</div><div class=\"line\">        value = 10,</div><div class=\"line\">        result = value + 10;</div><div class=\"line\">    </div><div class=\"line\">    for (i = 0, length = items.length; i &lt; length; i++) &#123;</div><div class=\"line\">        xxx;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>语句末尾一定加分号</p>\n</li>\n<li><p>给变量赋值时如果右侧是含有比较语句的表达式，需要用圆括号包裹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var flag = (i &lt; count);</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用===、!== ，避免使用==和!=</p>\n</li>\n<li>if语句可以进行相应的简化（特殊情况特殊处理）<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (count === 10) &#123;</div><div class=\"line\">    success = true;</div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">    success = false;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以简化为:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">success = (count === 10);</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (hasClick === true) &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\">if (hasClick === false) &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以简化为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (hasClick) &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\">if (!hasClick) &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"间距\"><a href=\"#间距\" class=\"headerlink\" title=\"间距\"></a>间距</h3><ul>\n<li><p>运算符间距。二元运算符前后使用一个空格，包括赋值运算符、逻辑运算符等。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var found = (values[i] === item);</div><div class=\"line\"></div><div class=\"line\">if (found &amp;&amp; (count &gt; 10)) &#123;</div><div class=\"line\">    doSomething();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">for (i = 0; i &lt; count; i++) &#123;</div><div class=\"line\">    process(i);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>括号间距。紧接左括号之后和紧接右括号之前不应该有空格</p>\n</li>\n<li>对象内间距:<ul>\n<li>每个属性名后紧跟冒号，不加空格，冒号后加一个空格然后写属性值</li>\n<li>对象内要有恰当的缩进</li>\n<li>一组相关的属性前后插入一个空行（不要多）</li>\n</ul>\n</li>\n<li>空行。在上下逻辑不相关的地方插入一个空行（有且只有一个空行，不要多）</li>\n</ul>\n<h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><ul>\n<li>驼峰式命名，首字母小写，后面单词首字符大写</li>\n<li>变量名一定要有含义，避免a, b, c, x, y这样的命名，for循环中的i, j, k等变量除外，但是要写好注释</li>\n</ul>\n<h4 id=\"常量命名\"><a href=\"#常量命名\" class=\"headerlink\" title=\"常量命名\"></a>常量命名</h4><ul>\n<li>全大写字母加下划线，下划线用来分隔单词</li>\n</ul>\n<h4 id=\"变量命名\"><a href=\"#变量命名\" class=\"headerlink\" title=\"变量命名\"></a>变量命名</h4><ul>\n<li>变量名的第一个单词应当是名词（而非动词）</li>\n<li>不要在变量命名中使用下划线</li>\n</ul>\n<h4 id=\"函数命名\"><a href=\"#函数命名\" class=\"headerlink\" title=\"函数命名\"></a>函数命名</h4><ul>\n<li>函数名的第一个单词应当是动词（而非名词）</li>\n<li>不要再函数命名中使用下划线</li>\n</ul>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><blockquote>\n<p>不要写无意义的注释</p>\n</blockquote>\n<h4 id=\"变量-表达式注释\"><a href=\"#变量-表达式注释\" class=\"headerlink\" title=\"变量/表达式注释\"></a>变量/表达式注释</h4><ul>\n<li>在变量上方或后面用//进行单行注释，//后应当加一个空格</li>\n<li>如果在上方使用独立行注释，应当有适当的缩进，并且注释的上方应当有一个空行</li>\n<li>如果在后面进行注释，//前应有两个空格的缩进</li>\n</ul>\n<h4 id=\"方法注释-webstorm在写好的方法上方输入-然后回车\"><a href=\"#方法注释-webstorm在写好的方法上方输入-然后回车\" class=\"headerlink\" title=\"方法注释(webstorm在写好的方法上方输入/**然后回车)\"></a>方法注释(webstorm在写好的方法上方输入/**然后回车)</h4><ul>\n<li>说明方法的作用或意义或内容</li>\n<li>说明每个参数的类型（类型不确定可以进行相应说明）及含义</li>\n<li>如果有返回值说明返回内容<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * 把源对象的属性扩展到目标对象</div><div class=\"line\"> * @param &#123;Any&#125; target 参数</div><div class=\"line\"> * @param &#123;Any*&#125; source 源对象。若有同名属性，则后者覆盖前者</div><div class=\"line\"> * @return &#123;Any&#125; 目标对象</div><div class=\"line\"> */</div><div class=\"line\">function extend(target, source) &#123;</div><div class=\"line\">    return xxx;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"注释声明\"><a href=\"#注释声明\" class=\"headerlink\" title=\"注释声明\"></a>注释声明</h4><ul>\n<li>TODO 说明代码还未完成，应当包含下一步要做的事情</li>\n<li>HACK 说明代码实现走了一个捷径，应当包含为何使用hack，也表明该问题可能会有更好的解决办法</li>\n<li>XXX  说明代码是有问题的并应尽快修复</li>\n<li>REVIEW 说明代码任何可能的修改都需要评审</li>\n</ul>\n<blockquote>\n<p>这些声明可以在单行注释或者多行注释中使用</p>\n</blockquote>\n<p>示例:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">// TODO: 我希望有更好的方式</div><div class=\"line\">doSOmething();</div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\"> * HACK: 不得不针对IE做特殊处理，我计划后续有时间重写这部分，</div><div class=\"line\"> * 这些代码可能需要在1.0.60版本之前替换掉。</div><div class=\"line\"> */</div><div class=\"line\">if (document.all) &#123;</div><div class=\"line\">    doSomething();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// REVIEW: 有更好的方法吗？</div><div class=\"line\">if (document.all) &#123;</div><div class=\"line\">    doSomething();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"js、css、html代码分离\"><a href=\"#js、css、html代码分离\" class=\"headerlink\" title=\"js、css、html代码分离\"></a>js、css、html代码分离</h3><ul>\n<li>避免在html写css样式</li>\n<li>尽量避免js中处理DOM，如果必要则必须写清楚注释并且把DOM操作部分独立出来，和逻辑处理分开</li>\n</ul>\n<h3 id=\"事件处理\"><a href=\"#事件处理\" class=\"headerlink\" title=\"事件处理\"></a>事件处理</h3><ul>\n<li>应用逻辑和事件处理程序独立</li>\n<li>事件处理程序进入应用逻辑之前可以对event进行必要的操作，比如阻止默认事件(event.preventDefault)或者冒泡事件(event.stopPropagation)等</li>\n</ul>\n<h3 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h3><ul>\n<li><p>不要用null来比较判断是否空值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">错误代码：</div><div class=\"line\">if (something === null) &#123;</div><div class=\"line\">    xxx</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用typeof来判断基本类型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">用法： typeof 变量</div><div class=\"line\">各个类型变量返回值:</div><div class=\"line\">字符串： &quot;string&quot;</div><div class=\"line\">数字： &quot;number&quot;</div><div class=\"line\">布尔值： &quot;boolean&quot;</div><div class=\"line\">null：  null(不是字符串)</div><div class=\"line\">undefined： &quot;undefined&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>用instanceof检查引用值（日期Date，错误Error等）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">用法： value instanceof constructor</div><div class=\"line\"></div><div class=\"line\">// 检测日期</div><div class=\"line\">if (value instanceof Date) &#123;</div><div class=\"line\">    console.log(value.getFullYear());</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 检测正则表达式</div><div class=\"line\">if (value instanceof RegExp) &#123;</div><div class=\"line\">    console.log(value);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>不要用instanceof检测Object，因为所有引用值都是继承Object</p>\n</blockquote>\n<ul>\n<li><p>用Array.isArray(value)检测数组</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array.isArray([1, 2, 3])</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用in检测对象属性是否存在</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var object = &#123;</div><div class=\"line\">    count: 0,</div><div class=\"line\">    related: null</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">if (&quot;count&quot; in object) &#123;</div><div class=\"line\">    xxx</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"js逻辑相关\"><a href=\"#js逻辑相关\" class=\"headerlink\" title=\"js逻辑相关\"></a>js逻辑相关</h3><ul>\n<li>逻辑运算优化! <a href=\"https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0\" target=\"_blank\" rel=\"external\">https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0</a></li>\n<li>避免看起来很混乱的逻辑判断，如果实在需要复杂的逻辑，一定写清楚注释</li>\n</ul>\n"},{"title":"ES6新特性简介","date":"2017-07-11T15:32:25.000Z","_content":"\n> 参考链接：[http://www.jianshu.com/p/ebfeb687eb70](http://www.jianshu.com/p/ebfeb687eb70)\n\nECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。\n也就是说，ES6就是ES2015。\n\n虽然目前并不是所有浏览器都能兼容ES6全部特性，但越来越多的程序员在实际项目当中已经开始使用ES6了。所以就算你现在不打算使用ES6，但为了看懂别人的你也该懂点ES6的语法了...\n\n在我们正式讲解ES6语法之前，我们得先了解下[Babel](https://babeljs.io/)。[Babel](https://babeljs.io/)是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行。大家可以选择自己习惯的工具来使用使用Babel，具体过程可直接在Babel官网查看。\n\n## 最常用的ES6特性\n\n```\nlet, const, class, extends, super, arrow functions, template string, destructuring, default, rest arguments\n```\n\n> 这些是ES6最常用的几个语法，基本上学会它们，我们就可以走遍天下都不怕啦！我会用最通俗易懂的语言和例子来讲解它们，保证一看就懂，一学就会。\n\n### let, const\n\n这两个的用途与var类似，都是用来声明变量的，但在实际运用中他俩都有各自的特殊用途。\n首先来看下面这个例子：\n\n```\nvar name = 'zach'\n\nwhile (true) {\n    var name = 'obama'\n    console.log(name)  //obama\n    break\n}\n\nconsole.log(name)  //obama\n```\n\n使用var两次输出都是obama，这是因为ES5只有全局作用域和函数作用域，没有块级作用域，这带来很多不合理的场景。第一种场景就是你现在看到的内层变量覆盖外层变量。而let则实际上为JavaScript新增了块级作用域。用它所声明的变量，只在let命令所在的代码块内有效。\n\n```\nlet name = 'zach'\n\nwhile (true) {\n    let name = 'obama'\n    console.log(name)  //obama\n    break\n}\n\nconsole.log(name)  //zach\n```\n\n另外一个var带来的不合理场景就是用来计数的循环变量泄露为全局变量，看下面的例子：\n\n```\nvar a = [];\nfor (var i = 0; i < 10; i++) {\n  a[i] = function () {\n    console.log(i);\n  };\n}\na[6](); // 10\n```\n\n上面代码中，变量i是var声明的，在全局范围内都有效。所以每一次循环，新的i值都会覆盖旧值，导致最后输出的是最后一轮的i的值。而使用let则不会出现这个问题。\n\n```\nvar a = [];\nfor (let i = 0; i < 10; i++) {\n  a[i] = function () {\n    console.log(i);\n  };\n}\na[6](); // 6\n```\n\n再来看一个更常见的例子，了解下如果不用ES6，而用闭包如何解决这个问题。\n\n```\nvar clickBoxs = document.querySelectorAll('.clickBox')\nfor (var i = 0; i < clickBoxs.length; i++){\n    clickBoxs[i].onclick = function(){\n        console.log(i)\n    }\n}\n```\n\n我们本来希望的是点击不同的clickBox，显示不同的i，但事实是无论我们点击哪个clickBox，输出的都是5。下面我们来看下，如何用闭包搞定它。\n\n```\nfunction iteratorFactory(i){\n    var onclick = function(e){\n        console.log(i)\n    }\n    return onclick;\n}\nvar clickBoxs = document.querySelectorAll('.clickBox')\nfor (var i = 0; i < clickBoxs.length; i++){\n    clickBoxs[i].onclick = iteratorFactory(i)\n}\n```\n\nconst也用来声明变量，但是声明的是常量。一旦声明，常量的值就不能改变。\n\n```\nconst PI = Math.PI\nPI = 23 //Module build failed: SyntaxError: /es6/app.js: \"PI\" is read-only\n```\n\n当我们尝试去改变用const声明的常量时，浏览器就会报错。\nconst有一个很好的应用场景，就是当我们引用第三方库的时声明的变量，用const来声明可以避免未来不小心重命名而导致出现bug：\n\n```\nconst monent = require('moment')\n```\n\n### class, extends, super\n\n这三个特性涉及了ES5中最令人头疼的的几个部分：原型、构造函数，继承...你还在为它们复杂难懂的语法而烦恼吗？你还在为指针到底指向哪里而纠结万分吗？\n\n有了ES6我们不再烦恼！\n\nES6提供了更接近传统语言的写法，引入了Class（类）这个概念。新的class写法让对象原型的写法更加清晰、更像面向对象编程的语法，也更加通俗易懂。\n\n```\nclass Animal {\n    constructor(){\n        this.type = 'animal'\n    }\n    says(say){\n        console.log(this.type + ' says ' + say)\n    }\n}\n\nlet animal = new Animal()\nanimal.says('hello') //animal says hello\n\nclass Cat extends Animal {\n    constructor(){\n        super()\n        this.type = 'cat'\n    }\n}\n\nlet cat = new Cat()\ncat.says('hello') //cat says hello\n```\n\n上面代码首先用class定义了一个“类”，可以看到里面有一个constructor方法，这就是构造方法，而this关键字则代表实例对象。简单地说，constructor内定义的方法和属性是实例对象自己的，而constructor外定义的方法和属性则是所有实力对象可以共享的。\n\nClass之间可以通过extends关键字实现继承，这比ES5的通过修改原型链实现继承，要清晰和方便很多。上面定义了一个Cat类，该类通过extends关键字，继承了Animal类的所有属性和方法。\n\nsuper关键字，它指代父类的实例（即父类的this对象）。子类必须在constructor方法中调用super方法，否则新建实例时会报错。这是因为子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。如果不调用super方法，子类就得不到this对象。\n\nES6的继承机制，实质是先创造父类的实例对象this（所以必须先调用super方法），然后再用子类的构造函数修改this。\n\n>  如果你写react的话，就会发现以上三个东西在最新版React中出现得很多。创建的每个component都是一个继承React.Component的类。[详见react文档](https://facebook.github.io/react/docs/components-and-props.html)。\n\n### arrow function\n\n这个恐怕是ES6最最常用的一个新特性了，用它来写function比原来的写法要简洁清晰很多:\n\n```\nfunction(i){ return i + 1; } //ES5\n(i) => i + 1 //ES6\n```\n\n简直是简单的不像话对吧...\n\n如果方程比较复杂，则需要用{}把代码包起来：\n\n```\nfunction(x, y) { \n    x++;\n    y--;\n    return x + y;\n}\n(x, y) => {x++; y--; return x+y}\n```\n\n除了看上去更简洁以外，arrow function还有一项超级无敌的功能！\n\n长期以来，JavaScript语言的this对象一直是一个令人头痛的问题，在对象方法中使用this，必须非常小心。例如：\n\n```\nclass Animal {\n    constructor(){\n        this.type = 'animal'\n    }\n    says(say){\n        setTimeout(function(){\n            console.log(this.type + ' says ' + say)\n        }, 1000)\n    }\n}\n\n var animal = new Animal()\n animal.says('hi')  //undefined says hi\n ```\n \n运行上面的代码会报错，这是因为setTimeout中的this指向的是全局对象。所以为了让它能够正确的运行，传统的解决方法有两种：\n\n1. 第一种是将this传给self,再用self来指代this\n``` \nsays(say){\n    var self = this;\n    setTimeout(function(){\n        console.log(self.type + ' says ' + say)\n}, 1000)\n```\n2. 第二种方法是用bind(this),即\n```\nsays(say){\n    setTimeout(function(){\n        console.log(self.type + ' says ' + say)\n    }.bind(this), 1000)\n}\n```\n\n但现在我们有了箭头函数，就不需要这么麻烦了：\n\n```\nclass Animal {\n    constructor(){\n        this.type = 'animal'\n    }\n    says(say){\n        setTimeout( () => {\n            console.log(this.type + ' says ' + say)\n        }, 1000)\n    }\n}\n var animal = new Animal()\n animal.says('hi')  //animal says hi\n ```\n \n当我们使用箭头函数时，函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。\n\n并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的this，它的this是继承外面的，因此内部的this就是外层代码块的this。\n\n### template string\n\n这个东西也是非常有用，当我们要插入大段的html内容到文档中时，传统的写法非常麻烦，所以之前我们通常会引用一些模板工具库，比如mustache等等。\n大家可以先看下面一段代码：\n\n```\n$(\"#result\").append(\n  \"There are <b>\" + basket.count + \"</b> \" +\n  \"items in your basket, \" +\n  \"<em>\" + basket.onSale +\n  \"</em> are on sale!\"\n);\n```\n\n我们要用一堆的'+'号来连接文本与变量，而使用ES6的新特性模板字符串``后，我们可以直接这么来写：\n\n```\n$(\"#result\").append(`\n  There are <b>${basket.count}</b> items\n   in your basket, <em>${basket.onSale}</em>\n  are on sale!\n`);\n```\n\n用反引号（`）来标识起始，用${}来引用变量，而且所有的空格和缩进都会被保留在输出之中，是不是非常爽？！\n\nReact Router从第1.0.3版开始也使用ES6语法了，比如这个例子：\n```\n<Link to={`/taco/${taco.name}`}>{taco.name}</Link>\n```\n\n### destructuring\n\nES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。\n看下面的例子：\n\n```\nlet cat = 'ken'\nlet dog = 'lili'\nlet zoo = {cat: cat, dog: dog}\nconsole.log(zoo)  //Object {cat: \"ken\", dog: \"lili\"}\n```\n\n用ES6完全可以像下面这么写：\n\n```\nlet cat = 'ken'\nlet dog = 'lili'\nlet zoo = {cat, dog}\nconsole.log(zoo)  //Object {cat: \"ken\", dog: \"lili\"}\n```\n\n反过来可以这么写：\n\n```\nlet dog = {type: 'animal', many: 2}\nlet { type, many} = dog\nconsole.log(type, many)   //animal 2\n```\n\n### default, rest\n\ndefault很简单，意思就是默认值。大家可以看下面的例子，调用animal()方法时忘了传参数，传统的做法就是加上这一句\n```\ntype = type || 'cat'\n```\n来指定默认值。\n\n```\nfunction animal(type){\n    type = type || 'cat'  \n    console.log(type)\n}\nanimal()\n```\n\n如果用ES6我们而已直接这么写：\n\n```\nfunction animal(type = 'cat'){\n    console.log(type)\n}\nanimal()\n```\n\n最后一个rest语法也很简单，直接看例子：\n\n```\nfunction animals(...types){\n    console.log(types)\n}\nanimals('cat', 'dog', 'fish') //[\"cat\", \"dog\", \"fish\"]\n```\n\n而如果不用ES6的话，我们则得使用ES5的arguments。\n","source":"_posts/ES6新特性简介.md","raw":"---\ntitle: ES6新特性简介\ndate: 2017-07-11 23:32:25\ncategories: \n- 前端-js-ES6\ntags: \n- 前端 \n- js\n- ES6\n---\n\n> 参考链接：[http://www.jianshu.com/p/ebfeb687eb70](http://www.jianshu.com/p/ebfeb687eb70)\n\nECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。\n也就是说，ES6就是ES2015。\n\n虽然目前并不是所有浏览器都能兼容ES6全部特性，但越来越多的程序员在实际项目当中已经开始使用ES6了。所以就算你现在不打算使用ES6，但为了看懂别人的你也该懂点ES6的语法了...\n\n在我们正式讲解ES6语法之前，我们得先了解下[Babel](https://babeljs.io/)。[Babel](https://babeljs.io/)是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行。大家可以选择自己习惯的工具来使用使用Babel，具体过程可直接在Babel官网查看。\n\n## 最常用的ES6特性\n\n```\nlet, const, class, extends, super, arrow functions, template string, destructuring, default, rest arguments\n```\n\n> 这些是ES6最常用的几个语法，基本上学会它们，我们就可以走遍天下都不怕啦！我会用最通俗易懂的语言和例子来讲解它们，保证一看就懂，一学就会。\n\n### let, const\n\n这两个的用途与var类似，都是用来声明变量的，但在实际运用中他俩都有各自的特殊用途。\n首先来看下面这个例子：\n\n```\nvar name = 'zach'\n\nwhile (true) {\n    var name = 'obama'\n    console.log(name)  //obama\n    break\n}\n\nconsole.log(name)  //obama\n```\n\n使用var两次输出都是obama，这是因为ES5只有全局作用域和函数作用域，没有块级作用域，这带来很多不合理的场景。第一种场景就是你现在看到的内层变量覆盖外层变量。而let则实际上为JavaScript新增了块级作用域。用它所声明的变量，只在let命令所在的代码块内有效。\n\n```\nlet name = 'zach'\n\nwhile (true) {\n    let name = 'obama'\n    console.log(name)  //obama\n    break\n}\n\nconsole.log(name)  //zach\n```\n\n另外一个var带来的不合理场景就是用来计数的循环变量泄露为全局变量，看下面的例子：\n\n```\nvar a = [];\nfor (var i = 0; i < 10; i++) {\n  a[i] = function () {\n    console.log(i);\n  };\n}\na[6](); // 10\n```\n\n上面代码中，变量i是var声明的，在全局范围内都有效。所以每一次循环，新的i值都会覆盖旧值，导致最后输出的是最后一轮的i的值。而使用let则不会出现这个问题。\n\n```\nvar a = [];\nfor (let i = 0; i < 10; i++) {\n  a[i] = function () {\n    console.log(i);\n  };\n}\na[6](); // 6\n```\n\n再来看一个更常见的例子，了解下如果不用ES6，而用闭包如何解决这个问题。\n\n```\nvar clickBoxs = document.querySelectorAll('.clickBox')\nfor (var i = 0; i < clickBoxs.length; i++){\n    clickBoxs[i].onclick = function(){\n        console.log(i)\n    }\n}\n```\n\n我们本来希望的是点击不同的clickBox，显示不同的i，但事实是无论我们点击哪个clickBox，输出的都是5。下面我们来看下，如何用闭包搞定它。\n\n```\nfunction iteratorFactory(i){\n    var onclick = function(e){\n        console.log(i)\n    }\n    return onclick;\n}\nvar clickBoxs = document.querySelectorAll('.clickBox')\nfor (var i = 0; i < clickBoxs.length; i++){\n    clickBoxs[i].onclick = iteratorFactory(i)\n}\n```\n\nconst也用来声明变量，但是声明的是常量。一旦声明，常量的值就不能改变。\n\n```\nconst PI = Math.PI\nPI = 23 //Module build failed: SyntaxError: /es6/app.js: \"PI\" is read-only\n```\n\n当我们尝试去改变用const声明的常量时，浏览器就会报错。\nconst有一个很好的应用场景，就是当我们引用第三方库的时声明的变量，用const来声明可以避免未来不小心重命名而导致出现bug：\n\n```\nconst monent = require('moment')\n```\n\n### class, extends, super\n\n这三个特性涉及了ES5中最令人头疼的的几个部分：原型、构造函数，继承...你还在为它们复杂难懂的语法而烦恼吗？你还在为指针到底指向哪里而纠结万分吗？\n\n有了ES6我们不再烦恼！\n\nES6提供了更接近传统语言的写法，引入了Class（类）这个概念。新的class写法让对象原型的写法更加清晰、更像面向对象编程的语法，也更加通俗易懂。\n\n```\nclass Animal {\n    constructor(){\n        this.type = 'animal'\n    }\n    says(say){\n        console.log(this.type + ' says ' + say)\n    }\n}\n\nlet animal = new Animal()\nanimal.says('hello') //animal says hello\n\nclass Cat extends Animal {\n    constructor(){\n        super()\n        this.type = 'cat'\n    }\n}\n\nlet cat = new Cat()\ncat.says('hello') //cat says hello\n```\n\n上面代码首先用class定义了一个“类”，可以看到里面有一个constructor方法，这就是构造方法，而this关键字则代表实例对象。简单地说，constructor内定义的方法和属性是实例对象自己的，而constructor外定义的方法和属性则是所有实力对象可以共享的。\n\nClass之间可以通过extends关键字实现继承，这比ES5的通过修改原型链实现继承，要清晰和方便很多。上面定义了一个Cat类，该类通过extends关键字，继承了Animal类的所有属性和方法。\n\nsuper关键字，它指代父类的实例（即父类的this对象）。子类必须在constructor方法中调用super方法，否则新建实例时会报错。这是因为子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。如果不调用super方法，子类就得不到this对象。\n\nES6的继承机制，实质是先创造父类的实例对象this（所以必须先调用super方法），然后再用子类的构造函数修改this。\n\n>  如果你写react的话，就会发现以上三个东西在最新版React中出现得很多。创建的每个component都是一个继承React.Component的类。[详见react文档](https://facebook.github.io/react/docs/components-and-props.html)。\n\n### arrow function\n\n这个恐怕是ES6最最常用的一个新特性了，用它来写function比原来的写法要简洁清晰很多:\n\n```\nfunction(i){ return i + 1; } //ES5\n(i) => i + 1 //ES6\n```\n\n简直是简单的不像话对吧...\n\n如果方程比较复杂，则需要用{}把代码包起来：\n\n```\nfunction(x, y) { \n    x++;\n    y--;\n    return x + y;\n}\n(x, y) => {x++; y--; return x+y}\n```\n\n除了看上去更简洁以外，arrow function还有一项超级无敌的功能！\n\n长期以来，JavaScript语言的this对象一直是一个令人头痛的问题，在对象方法中使用this，必须非常小心。例如：\n\n```\nclass Animal {\n    constructor(){\n        this.type = 'animal'\n    }\n    says(say){\n        setTimeout(function(){\n            console.log(this.type + ' says ' + say)\n        }, 1000)\n    }\n}\n\n var animal = new Animal()\n animal.says('hi')  //undefined says hi\n ```\n \n运行上面的代码会报错，这是因为setTimeout中的this指向的是全局对象。所以为了让它能够正确的运行，传统的解决方法有两种：\n\n1. 第一种是将this传给self,再用self来指代this\n``` \nsays(say){\n    var self = this;\n    setTimeout(function(){\n        console.log(self.type + ' says ' + say)\n}, 1000)\n```\n2. 第二种方法是用bind(this),即\n```\nsays(say){\n    setTimeout(function(){\n        console.log(self.type + ' says ' + say)\n    }.bind(this), 1000)\n}\n```\n\n但现在我们有了箭头函数，就不需要这么麻烦了：\n\n```\nclass Animal {\n    constructor(){\n        this.type = 'animal'\n    }\n    says(say){\n        setTimeout( () => {\n            console.log(this.type + ' says ' + say)\n        }, 1000)\n    }\n}\n var animal = new Animal()\n animal.says('hi')  //animal says hi\n ```\n \n当我们使用箭头函数时，函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。\n\n并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的this，它的this是继承外面的，因此内部的this就是外层代码块的this。\n\n### template string\n\n这个东西也是非常有用，当我们要插入大段的html内容到文档中时，传统的写法非常麻烦，所以之前我们通常会引用一些模板工具库，比如mustache等等。\n大家可以先看下面一段代码：\n\n```\n$(\"#result\").append(\n  \"There are <b>\" + basket.count + \"</b> \" +\n  \"items in your basket, \" +\n  \"<em>\" + basket.onSale +\n  \"</em> are on sale!\"\n);\n```\n\n我们要用一堆的'+'号来连接文本与变量，而使用ES6的新特性模板字符串``后，我们可以直接这么来写：\n\n```\n$(\"#result\").append(`\n  There are <b>${basket.count}</b> items\n   in your basket, <em>${basket.onSale}</em>\n  are on sale!\n`);\n```\n\n用反引号（`）来标识起始，用${}来引用变量，而且所有的空格和缩进都会被保留在输出之中，是不是非常爽？！\n\nReact Router从第1.0.3版开始也使用ES6语法了，比如这个例子：\n```\n<Link to={`/taco/${taco.name}`}>{taco.name}</Link>\n```\n\n### destructuring\n\nES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。\n看下面的例子：\n\n```\nlet cat = 'ken'\nlet dog = 'lili'\nlet zoo = {cat: cat, dog: dog}\nconsole.log(zoo)  //Object {cat: \"ken\", dog: \"lili\"}\n```\n\n用ES6完全可以像下面这么写：\n\n```\nlet cat = 'ken'\nlet dog = 'lili'\nlet zoo = {cat, dog}\nconsole.log(zoo)  //Object {cat: \"ken\", dog: \"lili\"}\n```\n\n反过来可以这么写：\n\n```\nlet dog = {type: 'animal', many: 2}\nlet { type, many} = dog\nconsole.log(type, many)   //animal 2\n```\n\n### default, rest\n\ndefault很简单，意思就是默认值。大家可以看下面的例子，调用animal()方法时忘了传参数，传统的做法就是加上这一句\n```\ntype = type || 'cat'\n```\n来指定默认值。\n\n```\nfunction animal(type){\n    type = type || 'cat'  \n    console.log(type)\n}\nanimal()\n```\n\n如果用ES6我们而已直接这么写：\n\n```\nfunction animal(type = 'cat'){\n    console.log(type)\n}\nanimal()\n```\n\n最后一个rest语法也很简单，直接看例子：\n\n```\nfunction animals(...types){\n    console.log(types)\n}\nanimals('cat', 'dog', 'fish') //[\"cat\", \"dog\", \"fish\"]\n```\n\n而如果不用ES6的话，我们则得使用ES5的arguments。\n","slug":"ES6新特性简介","published":1,"updated":"2017-07-12T14:40:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5148zvl0002yzw8pt5s1uda","content":"<blockquote>\n<p>参考链接：<a href=\"http://www.jianshu.com/p/ebfeb687eb70\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/ebfeb687eb70</a></p>\n</blockquote>\n<p>ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。<br>也就是说，ES6就是ES2015。</p>\n<p>虽然目前并不是所有浏览器都能兼容ES6全部特性，但越来越多的程序员在实际项目当中已经开始使用ES6了。所以就算你现在不打算使用ES6，但为了看懂别人的你也该懂点ES6的语法了…</p>\n<p>在我们正式讲解ES6语法之前，我们得先了解下<a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"external\">Babel</a>。<a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"external\">Babel</a>是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行。大家可以选择自己习惯的工具来使用使用Babel，具体过程可直接在Babel官网查看。</p>\n<h2 id=\"最常用的ES6特性\"><a href=\"#最常用的ES6特性\" class=\"headerlink\" title=\"最常用的ES6特性\"></a>最常用的ES6特性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">let, const, class, extends, super, arrow functions, template string, destructuring, default, rest arguments</div></pre></td></tr></table></figure>\n<blockquote>\n<p>这些是ES6最常用的几个语法，基本上学会它们，我们就可以走遍天下都不怕啦！我会用最通俗易懂的语言和例子来讲解它们，保证一看就懂，一学就会。</p>\n</blockquote>\n<h3 id=\"let-const\"><a href=\"#let-const\" class=\"headerlink\" title=\"let, const\"></a>let, const</h3><p>这两个的用途与var类似，都是用来声明变量的，但在实际运用中他俩都有各自的特殊用途。<br>首先来看下面这个例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var name = &apos;zach&apos;</div><div class=\"line\"></div><div class=\"line\">while (true) &#123;</div><div class=\"line\">    var name = &apos;obama&apos;</div><div class=\"line\">    console.log(name)  //obama</div><div class=\"line\">    break</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">console.log(name)  //obama</div></pre></td></tr></table></figure>\n<p>使用var两次输出都是obama，这是因为ES5只有全局作用域和函数作用域，没有块级作用域，这带来很多不合理的场景。第一种场景就是你现在看到的内层变量覆盖外层变量。而let则实际上为JavaScript新增了块级作用域。用它所声明的变量，只在let命令所在的代码块内有效。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">let name = &apos;zach&apos;</div><div class=\"line\"></div><div class=\"line\">while (true) &#123;</div><div class=\"line\">    let name = &apos;obama&apos;</div><div class=\"line\">    console.log(name)  //obama</div><div class=\"line\">    break</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">console.log(name)  //zach</div></pre></td></tr></table></figure>\n<p>另外一个var带来的不合理场景就是用来计数的循环变量泄露为全局变量，看下面的例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var a = [];</div><div class=\"line\">for (var i = 0; i &lt; 10; i++) &#123;</div><div class=\"line\">  a[i] = function () &#123;</div><div class=\"line\">    console.log(i);</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\">a[6](); // 10</div></pre></td></tr></table></figure>\n<p>上面代码中，变量i是var声明的，在全局范围内都有效。所以每一次循环，新的i值都会覆盖旧值，导致最后输出的是最后一轮的i的值。而使用let则不会出现这个问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var a = [];</div><div class=\"line\">for (let i = 0; i &lt; 10; i++) &#123;</div><div class=\"line\">  a[i] = function () &#123;</div><div class=\"line\">    console.log(i);</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\">a[6](); // 6</div></pre></td></tr></table></figure>\n<p>再来看一个更常见的例子，了解下如果不用ES6，而用闭包如何解决这个问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">var clickBoxs = document.querySelectorAll(&apos;.clickBox&apos;)</div><div class=\"line\">for (var i = 0; i &lt; clickBoxs.length; i++)&#123;</div><div class=\"line\">    clickBoxs[i].onclick = function()&#123;</div><div class=\"line\">        console.log(i)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们本来希望的是点击不同的clickBox，显示不同的i，但事实是无论我们点击哪个clickBox，输出的都是5。下面我们来看下，如何用闭包搞定它。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function iteratorFactory(i)&#123;</div><div class=\"line\">    var onclick = function(e)&#123;</div><div class=\"line\">        console.log(i)</div><div class=\"line\">    &#125;</div><div class=\"line\">    return onclick;</div><div class=\"line\">&#125;</div><div class=\"line\">var clickBoxs = document.querySelectorAll(&apos;.clickBox&apos;)</div><div class=\"line\">for (var i = 0; i &lt; clickBoxs.length; i++)&#123;</div><div class=\"line\">    clickBoxs[i].onclick = iteratorFactory(i)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>const也用来声明变量，但是声明的是常量。一旦声明，常量的值就不能改变。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">const PI = Math.PI</div><div class=\"line\">PI = 23 //Module build failed: SyntaxError: /es6/app.js: &quot;PI&quot; is read-only</div></pre></td></tr></table></figure>\n<p>当我们尝试去改变用const声明的常量时，浏览器就会报错。<br>const有一个很好的应用场景，就是当我们引用第三方库的时声明的变量，用const来声明可以避免未来不小心重命名而导致出现bug：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">const monent = require(&apos;moment&apos;)</div></pre></td></tr></table></figure>\n<h3 id=\"class-extends-super\"><a href=\"#class-extends-super\" class=\"headerlink\" title=\"class, extends, super\"></a>class, extends, super</h3><p>这三个特性涉及了ES5中最令人头疼的的几个部分：原型、构造函数，继承…你还在为它们复杂难懂的语法而烦恼吗？你还在为指针到底指向哪里而纠结万分吗？</p>\n<p>有了ES6我们不再烦恼！</p>\n<p>ES6提供了更接近传统语言的写法，引入了Class（类）这个概念。新的class写法让对象原型的写法更加清晰、更像面向对象编程的语法，也更加通俗易懂。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Animal &#123;</div><div class=\"line\">    constructor()&#123;</div><div class=\"line\">        this.type = &apos;animal&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">    says(say)&#123;</div><div class=\"line\">        console.log(this.type + &apos; says &apos; + say)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">let animal = new Animal()</div><div class=\"line\">animal.says(&apos;hello&apos;) //animal says hello</div><div class=\"line\"></div><div class=\"line\">class Cat extends Animal &#123;</div><div class=\"line\">    constructor()&#123;</div><div class=\"line\">        super()</div><div class=\"line\">        this.type = &apos;cat&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">let cat = new Cat()</div><div class=\"line\">cat.says(&apos;hello&apos;) //cat says hello</div></pre></td></tr></table></figure>\n<p>上面代码首先用class定义了一个“类”，可以看到里面有一个constructor方法，这就是构造方法，而this关键字则代表实例对象。简单地说，constructor内定义的方法和属性是实例对象自己的，而constructor外定义的方法和属性则是所有实力对象可以共享的。</p>\n<p>Class之间可以通过extends关键字实现继承，这比ES5的通过修改原型链实现继承，要清晰和方便很多。上面定义了一个Cat类，该类通过extends关键字，继承了Animal类的所有属性和方法。</p>\n<p>super关键字，它指代父类的实例（即父类的this对象）。子类必须在constructor方法中调用super方法，否则新建实例时会报错。这是因为子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。如果不调用super方法，子类就得不到this对象。</p>\n<p>ES6的继承机制，实质是先创造父类的实例对象this（所以必须先调用super方法），然后再用子类的构造函数修改this。</p>\n<blockquote>\n<p> 如果你写react的话，就会发现以上三个东西在最新版React中出现得很多。创建的每个component都是一个继承React.Component的类。<a href=\"https://facebook.github.io/react/docs/components-and-props.html\" target=\"_blank\" rel=\"external\">详见react文档</a>。</p>\n</blockquote>\n<h3 id=\"arrow-function\"><a href=\"#arrow-function\" class=\"headerlink\" title=\"arrow function\"></a>arrow function</h3><p>这个恐怕是ES6最最常用的一个新特性了，用它来写function比原来的写法要简洁清晰很多:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">function(i)&#123; return i + 1; &#125; //ES5</div><div class=\"line\">(i) =&gt; i + 1 //ES6</div></pre></td></tr></table></figure>\n<p>简直是简单的不像话对吧…</p>\n<p>如果方程比较复杂，则需要用{}把代码包起来：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">function(x, y) &#123; </div><div class=\"line\">    x++;</div><div class=\"line\">    y--;</div><div class=\"line\">    return x + y;</div><div class=\"line\">&#125;</div><div class=\"line\">(x, y) =&gt; &#123;x++; y--; return x+y&#125;</div></pre></td></tr></table></figure>\n<p>除了看上去更简洁以外，arrow function还有一项超级无敌的功能！</p>\n<p>长期以来，JavaScript语言的this对象一直是一个令人头痛的问题，在对象方法中使用this，必须非常小心。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Animal &#123;</div><div class=\"line\">    constructor()&#123;</div><div class=\"line\">        this.type = &apos;animal&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">    says(say)&#123;</div><div class=\"line\">        setTimeout(function()&#123;</div><div class=\"line\">            console.log(this.type + &apos; says &apos; + say)</div><div class=\"line\">        &#125;, 1000)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> var animal = new Animal()</div><div class=\"line\"> animal.says(&apos;hi&apos;)  //undefined says hi</div></pre></td></tr></table></figure>\n<p>运行上面的代码会报错，这是因为setTimeout中的this指向的是全局对象。所以为了让它能够正确的运行，传统的解决方法有两种：</p>\n<ol>\n<li><p>第一种是将this传给self,再用self来指代this</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">says(say)&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    setTimeout(function()&#123;</div><div class=\"line\">        console.log(self.type + &apos; says &apos; + say)</div><div class=\"line\">&#125;, 1000)</div></pre></td></tr></table></figure>\n</li>\n<li><p>第二种方法是用bind(this),即</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">says(say)&#123;</div><div class=\"line\">    setTimeout(function()&#123;</div><div class=\"line\">        console.log(self.type + &apos; says &apos; + say)</div><div class=\"line\">    &#125;.bind(this), 1000)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>但现在我们有了箭头函数，就不需要这么麻烦了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Animal &#123;</div><div class=\"line\">    constructor()&#123;</div><div class=\"line\">        this.type = &apos;animal&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">    says(say)&#123;</div><div class=\"line\">        setTimeout( () =&gt; &#123;</div><div class=\"line\">            console.log(this.type + &apos; says &apos; + say)</div><div class=\"line\">        &#125;, 1000)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"> var animal = new Animal()</div><div class=\"line\"> animal.says(&apos;hi&apos;)  //animal says hi</div></pre></td></tr></table></figure>\n<p>当我们使用箭头函数时，函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。</p>\n<p>并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的this，它的this是继承外面的，因此内部的this就是外层代码块的this。</p>\n<h3 id=\"template-string\"><a href=\"#template-string\" class=\"headerlink\" title=\"template string\"></a>template string</h3><p>这个东西也是非常有用，当我们要插入大段的html内容到文档中时，传统的写法非常麻烦，所以之前我们通常会引用一些模板工具库，比如mustache等等。<br>大家可以先看下面一段代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;#result&quot;).append(</div><div class=\"line\">  &quot;There are &lt;b&gt;&quot; + basket.count + &quot;&lt;/b&gt; &quot; +</div><div class=\"line\">  &quot;items in your basket, &quot; +</div><div class=\"line\">  &quot;&lt;em&gt;&quot; + basket.onSale +</div><div class=\"line\">  &quot;&lt;/em&gt; are on sale!&quot;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p>我们要用一堆的’+’号来连接文本与变量，而使用ES6的新特性模板字符串``后，我们可以直接这么来写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;#result&quot;).append(`</div><div class=\"line\">  There are &lt;b&gt;$&#123;basket.count&#125;&lt;/b&gt; items</div><div class=\"line\">   in your basket, &lt;em&gt;$&#123;basket.onSale&#125;&lt;/em&gt;</div><div class=\"line\">  are on sale!</div><div class=\"line\">`);</div></pre></td></tr></table></figure>\n<p>用反引号（`）来标识起始，用${}来引用变量，而且所有的空格和缩进都会被保留在输出之中，是不是非常爽？！</p>\n<p>React Router从第1.0.3版开始也使用ES6语法了，比如这个例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Link to=&#123;`/taco/$&#123;taco.name&#125;`&#125;&gt;&#123;taco.name&#125;&lt;/Link&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"destructuring\"><a href=\"#destructuring\" class=\"headerlink\" title=\"destructuring\"></a>destructuring</h3><p>ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。<br>看下面的例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">let cat = &apos;ken&apos;</div><div class=\"line\">let dog = &apos;lili&apos;</div><div class=\"line\">let zoo = &#123;cat: cat, dog: dog&#125;</div><div class=\"line\">console.log(zoo)  //Object &#123;cat: &quot;ken&quot;, dog: &quot;lili&quot;&#125;</div></pre></td></tr></table></figure>\n<p>用ES6完全可以像下面这么写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">let cat = &apos;ken&apos;</div><div class=\"line\">let dog = &apos;lili&apos;</div><div class=\"line\">let zoo = &#123;cat, dog&#125;</div><div class=\"line\">console.log(zoo)  //Object &#123;cat: &quot;ken&quot;, dog: &quot;lili&quot;&#125;</div></pre></td></tr></table></figure>\n<p>反过来可以这么写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">let dog = &#123;type: &apos;animal&apos;, many: 2&#125;</div><div class=\"line\">let &#123; type, many&#125; = dog</div><div class=\"line\">console.log(type, many)   //animal 2</div></pre></td></tr></table></figure>\n<h3 id=\"default-rest\"><a href=\"#default-rest\" class=\"headerlink\" title=\"default, rest\"></a>default, rest</h3><p>default很简单，意思就是默认值。大家可以看下面的例子，调用animal()方法时忘了传参数，传统的做法就是加上这一句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">type = type || &apos;cat&apos;</div></pre></td></tr></table></figure></p>\n<p>来指定默认值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">function animal(type)&#123;</div><div class=\"line\">    type = type || &apos;cat&apos;  </div><div class=\"line\">    console.log(type)</div><div class=\"line\">&#125;</div><div class=\"line\">animal()</div></pre></td></tr></table></figure>\n<p>如果用ES6我们而已直接这么写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">function animal(type = &apos;cat&apos;)&#123;</div><div class=\"line\">    console.log(type)</div><div class=\"line\">&#125;</div><div class=\"line\">animal()</div></pre></td></tr></table></figure>\n<p>最后一个rest语法也很简单，直接看例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">function animals(...types)&#123;</div><div class=\"line\">    console.log(types)</div><div class=\"line\">&#125;</div><div class=\"line\">animals(&apos;cat&apos;, &apos;dog&apos;, &apos;fish&apos;) //[&quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot;]</div></pre></td></tr></table></figure>\n<p>而如果不用ES6的话，我们则得使用ES5的arguments。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>参考链接：<a href=\"http://www.jianshu.com/p/ebfeb687eb70\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/ebfeb687eb70</a></p>\n</blockquote>\n<p>ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。<br>也就是说，ES6就是ES2015。</p>\n<p>虽然目前并不是所有浏览器都能兼容ES6全部特性，但越来越多的程序员在实际项目当中已经开始使用ES6了。所以就算你现在不打算使用ES6，但为了看懂别人的你也该懂点ES6的语法了…</p>\n<p>在我们正式讲解ES6语法之前，我们得先了解下<a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"external\">Babel</a>。<a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"external\">Babel</a>是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行。大家可以选择自己习惯的工具来使用使用Babel，具体过程可直接在Babel官网查看。</p>\n<h2 id=\"最常用的ES6特性\"><a href=\"#最常用的ES6特性\" class=\"headerlink\" title=\"最常用的ES6特性\"></a>最常用的ES6特性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">let, const, class, extends, super, arrow functions, template string, destructuring, default, rest arguments</div></pre></td></tr></table></figure>\n<blockquote>\n<p>这些是ES6最常用的几个语法，基本上学会它们，我们就可以走遍天下都不怕啦！我会用最通俗易懂的语言和例子来讲解它们，保证一看就懂，一学就会。</p>\n</blockquote>\n<h3 id=\"let-const\"><a href=\"#let-const\" class=\"headerlink\" title=\"let, const\"></a>let, const</h3><p>这两个的用途与var类似，都是用来声明变量的，但在实际运用中他俩都有各自的特殊用途。<br>首先来看下面这个例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var name = &apos;zach&apos;</div><div class=\"line\"></div><div class=\"line\">while (true) &#123;</div><div class=\"line\">    var name = &apos;obama&apos;</div><div class=\"line\">    console.log(name)  //obama</div><div class=\"line\">    break</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">console.log(name)  //obama</div></pre></td></tr></table></figure>\n<p>使用var两次输出都是obama，这是因为ES5只有全局作用域和函数作用域，没有块级作用域，这带来很多不合理的场景。第一种场景就是你现在看到的内层变量覆盖外层变量。而let则实际上为JavaScript新增了块级作用域。用它所声明的变量，只在let命令所在的代码块内有效。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">let name = &apos;zach&apos;</div><div class=\"line\"></div><div class=\"line\">while (true) &#123;</div><div class=\"line\">    let name = &apos;obama&apos;</div><div class=\"line\">    console.log(name)  //obama</div><div class=\"line\">    break</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">console.log(name)  //zach</div></pre></td></tr></table></figure>\n<p>另外一个var带来的不合理场景就是用来计数的循环变量泄露为全局变量，看下面的例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var a = [];</div><div class=\"line\">for (var i = 0; i &lt; 10; i++) &#123;</div><div class=\"line\">  a[i] = function () &#123;</div><div class=\"line\">    console.log(i);</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\">a[6](); // 10</div></pre></td></tr></table></figure>\n<p>上面代码中，变量i是var声明的，在全局范围内都有效。所以每一次循环，新的i值都会覆盖旧值，导致最后输出的是最后一轮的i的值。而使用let则不会出现这个问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var a = [];</div><div class=\"line\">for (let i = 0; i &lt; 10; i++) &#123;</div><div class=\"line\">  a[i] = function () &#123;</div><div class=\"line\">    console.log(i);</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\">a[6](); // 6</div></pre></td></tr></table></figure>\n<p>再来看一个更常见的例子，了解下如果不用ES6，而用闭包如何解决这个问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">var clickBoxs = document.querySelectorAll(&apos;.clickBox&apos;)</div><div class=\"line\">for (var i = 0; i &lt; clickBoxs.length; i++)&#123;</div><div class=\"line\">    clickBoxs[i].onclick = function()&#123;</div><div class=\"line\">        console.log(i)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们本来希望的是点击不同的clickBox，显示不同的i，但事实是无论我们点击哪个clickBox，输出的都是5。下面我们来看下，如何用闭包搞定它。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function iteratorFactory(i)&#123;</div><div class=\"line\">    var onclick = function(e)&#123;</div><div class=\"line\">        console.log(i)</div><div class=\"line\">    &#125;</div><div class=\"line\">    return onclick;</div><div class=\"line\">&#125;</div><div class=\"line\">var clickBoxs = document.querySelectorAll(&apos;.clickBox&apos;)</div><div class=\"line\">for (var i = 0; i &lt; clickBoxs.length; i++)&#123;</div><div class=\"line\">    clickBoxs[i].onclick = iteratorFactory(i)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>const也用来声明变量，但是声明的是常量。一旦声明，常量的值就不能改变。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">const PI = Math.PI</div><div class=\"line\">PI = 23 //Module build failed: SyntaxError: /es6/app.js: &quot;PI&quot; is read-only</div></pre></td></tr></table></figure>\n<p>当我们尝试去改变用const声明的常量时，浏览器就会报错。<br>const有一个很好的应用场景，就是当我们引用第三方库的时声明的变量，用const来声明可以避免未来不小心重命名而导致出现bug：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">const monent = require(&apos;moment&apos;)</div></pre></td></tr></table></figure>\n<h3 id=\"class-extends-super\"><a href=\"#class-extends-super\" class=\"headerlink\" title=\"class, extends, super\"></a>class, extends, super</h3><p>这三个特性涉及了ES5中最令人头疼的的几个部分：原型、构造函数，继承…你还在为它们复杂难懂的语法而烦恼吗？你还在为指针到底指向哪里而纠结万分吗？</p>\n<p>有了ES6我们不再烦恼！</p>\n<p>ES6提供了更接近传统语言的写法，引入了Class（类）这个概念。新的class写法让对象原型的写法更加清晰、更像面向对象编程的语法，也更加通俗易懂。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Animal &#123;</div><div class=\"line\">    constructor()&#123;</div><div class=\"line\">        this.type = &apos;animal&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">    says(say)&#123;</div><div class=\"line\">        console.log(this.type + &apos; says &apos; + say)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">let animal = new Animal()</div><div class=\"line\">animal.says(&apos;hello&apos;) //animal says hello</div><div class=\"line\"></div><div class=\"line\">class Cat extends Animal &#123;</div><div class=\"line\">    constructor()&#123;</div><div class=\"line\">        super()</div><div class=\"line\">        this.type = &apos;cat&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">let cat = new Cat()</div><div class=\"line\">cat.says(&apos;hello&apos;) //cat says hello</div></pre></td></tr></table></figure>\n<p>上面代码首先用class定义了一个“类”，可以看到里面有一个constructor方法，这就是构造方法，而this关键字则代表实例对象。简单地说，constructor内定义的方法和属性是实例对象自己的，而constructor外定义的方法和属性则是所有实力对象可以共享的。</p>\n<p>Class之间可以通过extends关键字实现继承，这比ES5的通过修改原型链实现继承，要清晰和方便很多。上面定义了一个Cat类，该类通过extends关键字，继承了Animal类的所有属性和方法。</p>\n<p>super关键字，它指代父类的实例（即父类的this对象）。子类必须在constructor方法中调用super方法，否则新建实例时会报错。这是因为子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。如果不调用super方法，子类就得不到this对象。</p>\n<p>ES6的继承机制，实质是先创造父类的实例对象this（所以必须先调用super方法），然后再用子类的构造函数修改this。</p>\n<blockquote>\n<p> 如果你写react的话，就会发现以上三个东西在最新版React中出现得很多。创建的每个component都是一个继承React.Component的类。<a href=\"https://facebook.github.io/react/docs/components-and-props.html\" target=\"_blank\" rel=\"external\">详见react文档</a>。</p>\n</blockquote>\n<h3 id=\"arrow-function\"><a href=\"#arrow-function\" class=\"headerlink\" title=\"arrow function\"></a>arrow function</h3><p>这个恐怕是ES6最最常用的一个新特性了，用它来写function比原来的写法要简洁清晰很多:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">function(i)&#123; return i + 1; &#125; //ES5</div><div class=\"line\">(i) =&gt; i + 1 //ES6</div></pre></td></tr></table></figure>\n<p>简直是简单的不像话对吧…</p>\n<p>如果方程比较复杂，则需要用{}把代码包起来：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">function(x, y) &#123; </div><div class=\"line\">    x++;</div><div class=\"line\">    y--;</div><div class=\"line\">    return x + y;</div><div class=\"line\">&#125;</div><div class=\"line\">(x, y) =&gt; &#123;x++; y--; return x+y&#125;</div></pre></td></tr></table></figure>\n<p>除了看上去更简洁以外，arrow function还有一项超级无敌的功能！</p>\n<p>长期以来，JavaScript语言的this对象一直是一个令人头痛的问题，在对象方法中使用this，必须非常小心。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Animal &#123;</div><div class=\"line\">    constructor()&#123;</div><div class=\"line\">        this.type = &apos;animal&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">    says(say)&#123;</div><div class=\"line\">        setTimeout(function()&#123;</div><div class=\"line\">            console.log(this.type + &apos; says &apos; + say)</div><div class=\"line\">        &#125;, 1000)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> var animal = new Animal()</div><div class=\"line\"> animal.says(&apos;hi&apos;)  //undefined says hi</div></pre></td></tr></table></figure>\n<p>运行上面的代码会报错，这是因为setTimeout中的this指向的是全局对象。所以为了让它能够正确的运行，传统的解决方法有两种：</p>\n<ol>\n<li><p>第一种是将this传给self,再用self来指代this</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">says(say)&#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    setTimeout(function()&#123;</div><div class=\"line\">        console.log(self.type + &apos; says &apos; + say)</div><div class=\"line\">&#125;, 1000)</div></pre></td></tr></table></figure>\n</li>\n<li><p>第二种方法是用bind(this),即</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">says(say)&#123;</div><div class=\"line\">    setTimeout(function()&#123;</div><div class=\"line\">        console.log(self.type + &apos; says &apos; + say)</div><div class=\"line\">    &#125;.bind(this), 1000)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>但现在我们有了箭头函数，就不需要这么麻烦了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Animal &#123;</div><div class=\"line\">    constructor()&#123;</div><div class=\"line\">        this.type = &apos;animal&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">    says(say)&#123;</div><div class=\"line\">        setTimeout( () =&gt; &#123;</div><div class=\"line\">            console.log(this.type + &apos; says &apos; + say)</div><div class=\"line\">        &#125;, 1000)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"> var animal = new Animal()</div><div class=\"line\"> animal.says(&apos;hi&apos;)  //animal says hi</div></pre></td></tr></table></figure>\n<p>当我们使用箭头函数时，函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。</p>\n<p>并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的this，它的this是继承外面的，因此内部的this就是外层代码块的this。</p>\n<h3 id=\"template-string\"><a href=\"#template-string\" class=\"headerlink\" title=\"template string\"></a>template string</h3><p>这个东西也是非常有用，当我们要插入大段的html内容到文档中时，传统的写法非常麻烦，所以之前我们通常会引用一些模板工具库，比如mustache等等。<br>大家可以先看下面一段代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;#result&quot;).append(</div><div class=\"line\">  &quot;There are &lt;b&gt;&quot; + basket.count + &quot;&lt;/b&gt; &quot; +</div><div class=\"line\">  &quot;items in your basket, &quot; +</div><div class=\"line\">  &quot;&lt;em&gt;&quot; + basket.onSale +</div><div class=\"line\">  &quot;&lt;/em&gt; are on sale!&quot;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p>我们要用一堆的’+’号来连接文本与变量，而使用ES6的新特性模板字符串``后，我们可以直接这么来写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;#result&quot;).append(`</div><div class=\"line\">  There are &lt;b&gt;$&#123;basket.count&#125;&lt;/b&gt; items</div><div class=\"line\">   in your basket, &lt;em&gt;$&#123;basket.onSale&#125;&lt;/em&gt;</div><div class=\"line\">  are on sale!</div><div class=\"line\">`);</div></pre></td></tr></table></figure>\n<p>用反引号（`）来标识起始，用${}来引用变量，而且所有的空格和缩进都会被保留在输出之中，是不是非常爽？！</p>\n<p>React Router从第1.0.3版开始也使用ES6语法了，比如这个例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Link to=&#123;`/taco/$&#123;taco.name&#125;`&#125;&gt;&#123;taco.name&#125;&lt;/Link&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"destructuring\"><a href=\"#destructuring\" class=\"headerlink\" title=\"destructuring\"></a>destructuring</h3><p>ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。<br>看下面的例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">let cat = &apos;ken&apos;</div><div class=\"line\">let dog = &apos;lili&apos;</div><div class=\"line\">let zoo = &#123;cat: cat, dog: dog&#125;</div><div class=\"line\">console.log(zoo)  //Object &#123;cat: &quot;ken&quot;, dog: &quot;lili&quot;&#125;</div></pre></td></tr></table></figure>\n<p>用ES6完全可以像下面这么写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">let cat = &apos;ken&apos;</div><div class=\"line\">let dog = &apos;lili&apos;</div><div class=\"line\">let zoo = &#123;cat, dog&#125;</div><div class=\"line\">console.log(zoo)  //Object &#123;cat: &quot;ken&quot;, dog: &quot;lili&quot;&#125;</div></pre></td></tr></table></figure>\n<p>反过来可以这么写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">let dog = &#123;type: &apos;animal&apos;, many: 2&#125;</div><div class=\"line\">let &#123; type, many&#125; = dog</div><div class=\"line\">console.log(type, many)   //animal 2</div></pre></td></tr></table></figure>\n<h3 id=\"default-rest\"><a href=\"#default-rest\" class=\"headerlink\" title=\"default, rest\"></a>default, rest</h3><p>default很简单，意思就是默认值。大家可以看下面的例子，调用animal()方法时忘了传参数，传统的做法就是加上这一句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">type = type || &apos;cat&apos;</div></pre></td></tr></table></figure></p>\n<p>来指定默认值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">function animal(type)&#123;</div><div class=\"line\">    type = type || &apos;cat&apos;  </div><div class=\"line\">    console.log(type)</div><div class=\"line\">&#125;</div><div class=\"line\">animal()</div></pre></td></tr></table></figure>\n<p>如果用ES6我们而已直接这么写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">function animal(type = &apos;cat&apos;)&#123;</div><div class=\"line\">    console.log(type)</div><div class=\"line\">&#125;</div><div class=\"line\">animal()</div></pre></td></tr></table></figure>\n<p>最后一个rest语法也很简单，直接看例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">function animals(...types)&#123;</div><div class=\"line\">    console.log(types)</div><div class=\"line\">&#125;</div><div class=\"line\">animals(&apos;cat&apos;, &apos;dog&apos;, &apos;fish&apos;) //[&quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot;]</div></pre></td></tr></table></figure>\n<p>而如果不用ES6的话，我们则得使用ES5的arguments。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj5148zvc0000yzw8cylvug8g","category_id":"cj5148zvp0004yzw87rdmsifz","_id":"cj5148zvx0008yzw8l4qb7uwm"},{"post_id":"cj5148zvl0002yzw8pt5s1uda","category_id":"cj5148zvv0006yzw81n6ghzn6","_id":"cj5148zvy000ayzw8gv16b5hn"}],"PostTag":[{"post_id":"cj5148zvc0000yzw8cylvug8g","tag_id":"cj5148zvt0005yzw8a8gfegdu","_id":"cj5148zw0000dyzw861yrhwcn"},{"post_id":"cj5148zvc0000yzw8cylvug8g","tag_id":"cj5148zvw0007yzw8g4ukoge6","_id":"cj5148zw0000eyzw8ob0gabk6"},{"post_id":"cj5148zvc0000yzw8cylvug8g","tag_id":"cj5148zvx0009yzw8lbg8crh2","_id":"cj5148zw1000gyzw8kg3df811"},{"post_id":"cj5148zvc0000yzw8cylvug8g","tag_id":"cj5148zvy000byzw8h97ojq6z","_id":"cj5148zw1000hyzw8ogfhhmgn"},{"post_id":"cj5148zvl0002yzw8pt5s1uda","tag_id":"cj5148zvt0005yzw8a8gfegdu","_id":"cj5148zw1000jyzw8uf8p086v"},{"post_id":"cj5148zvl0002yzw8pt5s1uda","tag_id":"cj5148zvw0007yzw8g4ukoge6","_id":"cj5148zw1000kyzw8uy1sp4rk"},{"post_id":"cj5148zvl0002yzw8pt5s1uda","tag_id":"cj5148zw1000iyzw8teth2wex","_id":"cj5148zw1000lyzw8mao9xfgy"}],"Tag":[{"name":"前端","_id":"cj5148zvt0005yzw8a8gfegdu"},{"name":"js","_id":"cj5148zvw0007yzw8g4ukoge6"},{"name":"规范","_id":"cj5148zvx0009yzw8lbg8crh2"},{"name":"ES5","_id":"cj5148zvy000byzw8h97ojq6z"},{"name":"ES6","_id":"cj5148zw1000iyzw8teth2wex"}]}}